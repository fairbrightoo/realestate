name: Test and Deploy Real Estate Web App

on:
  push:
    branches:
      - main

jobs:
  tests:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 0991chinweNDU1990
          MYSQL_DATABASE: doubleki_realestate_db
          MYSQL_USER: doubleki_db_admin
          MYSQL_PASSWORD: 0991chinweNDU1990
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3


    steps:

    - name: Get latest code
      uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
        
    - name: Cache composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
            ${{ runner.os }}-php-
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      
    - name: Generate key
      run: |
       php artisan optimize
       php artisan key:generate
      
    - name: Directory Permissions
      run: |
       chmod -R 775 bootstrap/cache
       chmod -R 775 storage

    #- name: Echo .env file
    #  run: echo -e "${{ secrets.ENV_FILE_CONTENT }}" > .env

    - name: Run migrations
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: doubleki_realestate_db
        DB_USERNAME: doubleki_db_admin
        DB_PASSWORD: 0991chinweNDU1990
      run: |
        php artisan migrate --force
        php artisan db:seed --force
      
    - name: Execute tests 
      run: php artisan test

  deploy:

    runs-on: ubuntu-latest

    needs: tests

    steps:
    - uses: actions/checkout@v2

    - name: Sync files
      uses: SamKirkland/FTP-Deploy-Action@master
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        server-dir: /public_html/staging/
