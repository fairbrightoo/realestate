on:
  push:
    branches:
      - main
name: ðŸš€ Deploy website on push (Main)
jobs:
  deploy:
    name: ðŸŽ‰ Deploy
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: phpmd
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Create test database
        run: |
          mysql -u root -proot -e "CREATE DATABASE IF NOT EXISTS doubleki_realestate_db;"
          
      - name: Run migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: doubleki_realestate_db
          DB_USERNAME: doubleki_db_admin
          DB_PASSWORD: 0991chinweNDU1990
        run: php artisan migrate --force

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      
      - name: Generate key
        run: |
         php artisan config:clear
         php artisan cache:clear
         php artisan key:generate
      
      - name: Generate storage link
        run: php artisan storage:link

      - name: Directory Pernmissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Run Unit tests
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_USERNAME: doubleki_admin
          DB_PASSWORD: y{z,v]Eklwm{
          DB_DATABASE: doubleki_realestate
        run: php artisan test

      - name: ðŸ“‚ Sync files
        if: ${{ success() }}
        uses: SamKirkland/FTP-Deploy-Action@master
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /
####################################################
name: Laravel

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3


    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2'
        
    - uses: actions/checkout@v4
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      
    - name: Generate key
      run: php artisan key:generate
      
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
      
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
        
    - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan test

  deploy:

    runs-on: ubuntu-latest

    needs: laravel-tests

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up FTP deployment
      uses: SamKirkland/FTP-Deploy-Action@4.3.0
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./  # local directory to upload
        server-dir: /path/to/your/server/directory  # server directory to upload to

    - name: Upload .env file
      run: |
        echo -e "${{ secrets.ENV_FILE_CONTENT }}" > .env
        curl --ftp-create-dirs -T .env -u ${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }} ftp://${{ secrets.FTP_SERVER }}/path/to/your/server/directory/.env

    - name: Run migrations and seed database
      env:
        DB_CONNECTION: mysql
        DB_DATABASE: realestate_db
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST: ${{ secrets.DB_HOST }}
      run: |
        php artisan migrate --force
        #php artisan db:seed --force

